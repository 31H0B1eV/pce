#*****************************************************************************
#* pce                                                                       *
#*****************************************************************************

#*****************************************************************************
#* File name:     configure.in                                               *
#* Created:       2002-05-20 by Hampa Hug <hampa@hampa.ch>                   *
#* Last modified: 2003-10-05 by Hampa Hug <hampa@hampa.ch>                   *
#* Copyright:     (C) 2002-2003 by Hampa Hug <hampa@hampa.ch>                *
#*****************************************************************************

#*****************************************************************************
#* This program is free software. You can redistribute it and / or modify it *
#* under the terms of the GNU General Public License version 2 as  published *
#* by the Free Software Foundation.                                          *
#*                                                                           *
#* This program is distributed in the hope  that  it  will  be  useful,  but *
#* WITHOUT  ANY   WARRANTY,   without   even   the   implied   warranty   of *
#* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU  General *
#* Public License for more details.                                          *
#*****************************************************************************

# $Id$


AC_PREREQ(2.50)

AC_INIT(pce)
AC_CONFIG_SRCDIR(Makefile.in)
AC_CONFIG_HEADER(src/config.h)


#-----------------------------------------------------------------------------
# package version

AC_MSG_CHECKING([pce version])
if test ! -r "$srcdir/version" ; then
	AC_MSG_RESULT([file 'version' not found in source directory])
	exit 1
fi
oldifs=$IFS
IFS="$IFS."
read p PCE_VERSION_MAJ PCE_VERSION_MIN PCE_VERSION_MIC dstr r < "$srcdir/version"
IFS=$oldifs
if test "x$dstr" != "x" ; then
	PCE_VERSION_REL=0
	if test "x$dstr" = "xcvs" ; then
		dstr=`date +%Y%m%d`
		PCE_VERSION_STR="cvs-$dstr"
	elif test "x$dstr" = "xsvn" ; then
		tmp=svninfo.$$.tmp
		svn info "$srcdir" > "$tmp" 2> /dev/null

		date=$(date "+%Y-%m-%d")
		rev=""

		while read a b c d e ; do
			case "$a$b$c$d" in
			"Revision:"*)
				rev="$b"
				;;
			"LastChangedDate:"*)
				date="$d"
				;;
			esac
		done < "$tmp"

		rm -f "$tmp"

		test -n "$rev" && rev="-r$rev"
		date=$(echo "$date" | sed -e "s/-//g")
		PCE_VERSION_STR="$date$rev"
	else
		PCE_VERSION_STR="$dstr"
	fi
else
	PCE_VERSION_REL=1
	PCE_VERSION_STR="$PCE_VERSION_MAJ.$PCE_VERSION_MIN.$PCE_VERSION_MIC"
fi
AC_SUBST(PCE_VERSION_MAJ)
AC_SUBST(PCE_VERSION_MIN)
AC_SUBST(PCE_VERSION_MIC)
AC_SUBST(PCE_VERSION_STR)
AC_SUBST(PCE_VERSION_REL)
AC_DEFINE_UNQUOTED(PCE_VERSION_MAJ, $PCE_VERSION_MAJ)
AC_DEFINE_UNQUOTED(PCE_VERSION_MIN, $PCE_VERSION_MIN)
AC_DEFINE_UNQUOTED(PCE_VERSION_MIC, $PCE_VERSION_MIC)
AC_DEFINE_UNQUOTED(PCE_VERSION_STR, "$PCE_VERSION_STR")
AC_DEFINE_UNQUOTED(PCE_VERSION_REL, $PCE_VERSION_REL)
AC_MSG_RESULT([$PCE_VERSION_STR])


#-----------------------------------------------------------------------------
# build time

AC_MSG_CHECKING([build time])
PCE_CFG_DATE=`date +%Y-%m-%d`
PCE_CFG_TIME=`date +%T`
AC_SUBST(PCE_CFG_DATE)
AC_SUBST(PCE_CFG_TIME)
AC_DEFINE_UNQUOTED(PCE_CFG_DATE, "$PCE_CFG_DATE")
AC_DEFINE_UNQUOTED(PCE_CFG_TIME, "$PCE_CFG_TIME")
AC_MSG_RESULT([$PCE_CFG_DATE $PCE_CFG_TIME])


AC_MSG_CHECKING([host OS])
os=`uname -s`
case "$os" in
[[Ll]]inux)
	AC_DEFINE(PCE_HOST_LINUX)
	AC_MSG_RESULT([Linux])
	;;
SunOS)
	AC_DEFINE(DEFAULT_HOST_SUNOS)
	AC_MSG_RESULT([SunOS])
	;;
*)
	AC_MSG_RESULT([unknown ($os)])
	;;
esac

AC_MSG_CHECKING([host architecture])
arch=`uname -m`
case "$arch" in
i?86)
	AC_DEFINE(PCE_ARCH_X86)
	AC_MSG_RESULT([x86])
	;;
ppc*)
	AC_DEFINE(PCE_ARCH_PPC)
	AC_MSG_RESULT([ppc])
	;;
sparc* | sun4*)
	AC_DEFINE(PCE_ARCH_SPARC)
	AC_MSG_RESULT([sparc])
	;;
*)
	AC_MSG_RESULT([unknown ($arch)])
	;;
esac


dnl -----------------------------------------------------------------------
dnl Checks for programs.

AC_PROG_CC
AC_PROG_INSTALL
case "$INSTALL" in
.*)
	d=`dirname "$INSTALL"`
	f=`basename "$INSTALL"`
	INSTALL=`cd "$d" && pwd`/"$f"
	;;
esac
AC_PATH_PROG(AR, ar, ar)
AC_PATH_PROG(NASM, nasm,)
AC_PATH_PROG(GZIP, gzip, gzip)
AC_PROG_MAKE_SET
AC_PROG_LN_S


if test -x "$NASM" ; then
	PCE_HAVE_NASM=1
else
	PCE_HAVE_NASM=0
fi
AC_SUBST(PCE_HAVE_NASM)


dnl -----------------------------------------------------------------------
dnl Checks for header files.

AC_HEADER_STDC
AC_CHECK_HEADERS(limits.h unistd.h fcntl.h termios.h sys/poll.h)
AC_CHECK_HEADER(X11/X.h, HAVE_X11_X_H=1, HAVE_X11_X_H=0)


dnl -----------------------------------------------------------------------
dnl Checks for libraries


AC_PATH_X
if test "x$no_x" = "xyes" ; then
	PCE_X11_USE=0
	PCE_X11_CCF=""
	PCE_X11_LDF=""
else
	PCE_X11_USE=1
	PCE_X11_CCF="-I$x_includes"
	PCE_X11_LDF="-L$x_libraries -lX11"
	AC_DEFINE(PCE_X11_USE)
fi
AC_SUBST(PCE_X11_USE)
AC_SUBST(PCE_X11_CCF)
AC_SUBST(PCE_X11_LDF)


AC_MSG_CHECKING([for SDL])
AC_ARG_WITH(sdl,
  AC_HELP_STRING([--with-sdl], [Build the SDL terminal]),
  [
	if test "x$withval" = "xno" ; then
		PCE_SDL_USE=0
		AC_MSG_RESULT([no (forced)])
	else
		PCE_SDL_USE=1
		AC_MSG_RESULT([yes (forced)])
	fi
  ],
  [
	if sdl-config --version > /dev/null 2>&1 ; then
		PCE_SDL_USE=1
		AC_MSG_RESULT([yes (detected)])
	else
		PCE_SDL_USE=0
		AC_MSG_RESULT([no (detected)])
	fi
  ]
)
if test $PCE_SDL_USE -ne 0 ; then
	PCE_SDL_CCF=`sdl-config --cflags`
	case "$LDFLAGS" in
	*-static*)
		PCE_SDL_LDF=`sdl-config --static-libs`
		;;
	*)
		PCE_SDL_LDF=`sdl-config --libs`
		;;
	esac
	AC_DEFINE(PCE_SDL_USE)
fi
AC_SUBST(PCE_SDL_USE)
AC_SUBST(PCE_SDL_CCF)
AC_SUBST(PCE_SDL_LDF)


AC_MSG_CHECKING([whether to build the ppc405 core])
AC_ARG_ENABLE(ppc405,
  AC_HELP_STRING([--enable-ppc405], [Enable the PowerPC 405 core]),
  [
  	if test "x$enableval" = "xyes" ; then
  		PCE_BUILD_PPC405=1
  		AC_MSG_RESULT([yes])
  	else
  		PCE_BUILD_PPC405=0
  		AC_MSG_RESULT([no])
  	fi
  ],
  [
  	PCE_BUILD_PPC405=0
	AC_MSG_RESULT([no])
  ]
)
AC_SUBST(PCE_BUILD_PPC405)
if test $PCE_BUILD_PPC405 -eq 1 ; then
	AC_DEFINE(PCE_BUILD_PPC405)
fi


AC_MSG_CHECKING([host clock])
AC_ARG_WITH(host-clock,
  AC_HELP_STRING([--with-host-clock=clock], [Set the host clock speed in Hz]),
  [
	PCE_HOST_FOSC="$withval"
	AC_MSG_RESULT([$PCE_HOST_FOSC (forced)])
  ],
  [
	PCE_HOST_FOSC=4772393
	AC_MSG_RESULT([$PCE_HOST_FOSC (default)])
  ]
)
AC_SUBST(PCE_HOST_FOSC)
AC_DEFINE_UNQUOTED(PCE_HOST_FOSC, $PCE_HOST_FOSC)


AC_MSG_CHECKING([whether to use the pentium TSC])
AC_ARG_ENABLE(tsc,
  AC_HELP_STRING([--enable-tsc], [Use Pentium TSC]),
  [
  	if test "x$enableval" = "xyes" ; then
  		PCE_HAVE_TSC=1
  		AC_MSG_RESULT([yes (forced)])
  	else
  		PCE_HAVE_TSC=0
  		AC_MSG_RESULT([no (forced)])
  	fi
  ],
  [
	case "`uname -m`" in
	i?86)
		PCE_HAVE_TSC=1
		AC_MSG_RESULT([yes (detected)])
		;;
	*)
		PCE_HAVE_TSC=0
		AC_MSG_RESULT([no (detected)])
		;;
	esac
  ]
)
AC_SUBST(PCE_HAVE_TSC)
if test $PCE_HAVE_TSC -eq 1 ; then
	AC_DEFINE(PCE_HAVE_TSC)
fi


eval "pce_etcdir=$sysconfdir"
eval "pce_etcdir=$pce_etcdir"

eval "pce_datdir=$datadir"
eval "pce_datdir=$pce_datdir"

PCE_DIR_ETC=$pce_etcdir
PCE_DIR_DATA=$pce_datdir

AC_SUBST(PCE_DIR_ETC)
AC_SUBST(PCE_DIR_DATA)
AC_DEFINE_UNQUOTED(PCE_DIR_ETC, "$pce_etcdir")
AC_DEFINE_UNQUOTED(PCE_DIR_DATA, "$pce_datdir")


dnl --------------------------------------------------------------------------

AC_OUTPUT(
  Makefile
  config.inc
  rules.inc
  src/Makefile
  src/arch/Makefile
  src/arch/ibmpc/Makefile
  src/arch/ibmpc/bios/Makefile
  src/arch/ibmpc/pceutils/Makefile
  src/chipset/Makefile
  src/cpu/Makefile
  src/cpu/e8086/Makefile
  src/cpu/ppc405/Makefile
  src/devices/Makefile
  src/lib/Makefile
  src/libini/Makefile
  src/terminal/Makefile
  src/config.inc
)


dnl --------------------------------------------------------------------------

term="null vt100"
noterm=""

if test "x$PCE_X11_USE" = "x1" ; then
	term="$term x11"
else
	noterm="$noterm x11"
fi

if test "x$PCE_SDL_USE" = "x1" ; then
	term="$term sdl"
else
	noterm="$noterm sdl"
fi

eval "pce_bindir=$bindir"
eval "pce_bindir=$pce_bindir"

eval "pce_libdir=$libdir"
eval "pce_libdir=$pce_libdir"

eval "pce_mandir=$mandir"
eval "pce_mandir=$pce_mandir"


echo ""
echo "pce $PCE_VERSION_STR is now configured:"

echo "  CC:                    $CC $CFLAGS"
echo "  LD:                    $CC $LDFLAGS"
echo ""
echo "  prefix:                $prefix"
echo "  bindir:                $pce_bindir"
echo "  etcdir:                $pce_etcdir"
echo "  mandir:                $pce_mandir"
echo "  datadir:               $pce_datdir"
echo ""
echo "  Terminals built:       $term"
echo "  Terminals skipped:    $noterm"

if test $PCE_HAVE_NASM -eq 0 ; then
	echo "  Build PC BIOS:         no"
else
	echo "  Build PC BIOS:         yes"
fi

echo "  Host clock:            $PCE_HOST_FOSC"

if test $PCE_HAVE_TSC -eq 0 ; then
	echo "  Use Pentium TSC:       no"
else
	echo "  Use Pentium TSC:       yes"
fi
